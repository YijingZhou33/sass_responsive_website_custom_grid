.story {
    width: 75%;
    margin: 0 auto;
    box-shadow: 0 3rem 6rem rgba($color-black, .1);
    background-color: rgba($color-white, .6);
    border-radius: 3px;
    padding: 6rem;
    padding-left: 9rem;
    transform: skewX(-12deg);
    // & * {
    //     transform: skewX(12deg);
    // }
    // make the container rectangle
    @include respond(tab-port) {
        width: 100%;
        padding: 4rem;
        padding-left: 7rem;
    }
    @include respond(phone) {
        transform: skewX(0);
    }
    &__shape {
        width: 15rem;
        height: 15rem;
        float: left;
        -webkit-clip-path: circle(50% at 50% 50%);
        clip-path: circle(50% at 50% 50%);
        // if can't show the circle image > original images + overflow:hidden
        overflow: hidden;
        border-radius: 50%;
        @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
            -webkit-clip-path: circle(50% at 50% 50%);
            clip-path: circle(50% at 50% 50%);
            // circle (radius center) 50% half the height and the width of the element
            // element should be floated
            -webkit-shape-outside: circle(50% at 50% 50%);
            shape-outside: circle(50% at 50% 50%);
            border-radius: none;
        }
        // move the float element > transform
        // & > * { transform: skewX(12deg) } won't work because this transform>translate takes precedence
        // CSS can't have two transform properties applied at the same time!
        transform: translateX(-3rem) skewX(12deg);
        position: relative;
        // fix shaky
        backface-visibility: hidden;
        @include respond(phone) {
            transform: translateX(-3rem) skewX(0);
        }
    }
    // responsive image always needs the width
    &__img {
        // image is inside a shape(15rem) > image width will be 15rem
        // width is bigger than height > 100% height
        height: 100%;
        transform: translateX(-4rem) scale(1.4);
        transition: all .5s ease-out;
    }
    &__text {
        transform: skewX(12deg);
        @include respond(phone) {
            transform: skewX(0);
        }
    }
    // hover: move up and on top of the image & center
    // before hovering: transparent 
    &__caption {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, 20%);
        text-transform: uppercase;
        font-size: 1.7rem;
        color: $color-white;
        text-align: center;
        opacity: 0;
        transition: all .5s ease-out;
    }
    // when hovering over: 1. images blurs & zooms out 2. text moves up
    &:hover &__caption {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
    &:hover &__img {
        transform: translateX(-4rem) scale(1);
        filter: blur(3px) brightness(80%);
    }
}